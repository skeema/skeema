name: Tests
on: [push, pull_request]
env:
  GOVERSION: "1.24"
  SKEEMA_TEST_IMAGES: "mysql:5.7,mysql:8.4,mariadb:10.11"
  SKEEMA_TEST_CLEANUP: "none"
jobs:
  test:
    name: Check code quality and run tests
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{env.GOVERSION}}

      - name: Check out code
        uses: actions/checkout@v4

      - name: Run gofmt
        run: test -z "$(gofmt -s -d *.go internal/*/*.go 2>&1)"

      - name: Run go vet
        run: go vet ./...

      - name: Run govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest && govulncheck -show verbose ./...

      - name: Run tests
        run: go test -v -p 1 -coverprofile=coverage.out -coverpkg=./... ./...

      - name: Report coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: go install github.com/mattn/goveralls@v0.0.12 && goveralls -v -coverprofile=coverage.out -service=github
        continue-on-error: true

  release:
    name: Build and deploy new release
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Set up latest Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.*

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@5742e2a039330cbb23ebf35f046f814d4c6ff811 # v5.1.0
        with:
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_GORELEASER_PAT }}

